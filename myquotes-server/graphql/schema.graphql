# GraphQL schema example

scalar Time

type Quote {
  id: ID!
  body: String!
  author: Author!
  dateOf: Time
  subject: String
  favCount: Int!
  user: User!
  createdAt: Time!
  updatedAt: Time!
}

type Author {
  id: ID!
  name: String!
  subject: String
  DOB: Time!
  DOD: Time!
  favCount: Int!
  quotes: [Quote!]!
  user: User!
  createdAt: Time!
  updatedAt: Time!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  isLoggedIn: Boolean!
  favouriteQuotes: [Quote]
  favouriteAuthors: [Author]
  createdAt: Time!
  updatedAt: Time!
}


#type Favourites {
#  id: ID!
#  user: User!
#  itemType: Boolean!
#  item_quote_id: String
#  item_author_id: String
#}

type AuthToken {
  accessToken: String!
  expiredAt: Time!
}

type AuthPayload {
  authToken: AuthToken!
  user: User!
}

input UserFilter {
  username: String
}

input AuthorFilter {
  name: String
  creatorId: ID
  subject: String
  favCount: Int
}

input QuoteFilter {
  authorId: ID
  creatorId: ID
  subject: String
  favCount: Int
  CreatedAt: Time
}

input RegisterInput {
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input LoginInput {
  usernameOrEmail: String!
  password: String!
}

input QuoteCreateInput {
  body: String!
  authorId: ID!
  dateOf: Time!
  subject: String!
}

input AuthorCreateInput {
  name: String!
  DOD: Time!
  DOB: Time!
}

input EditQuote {
  id: ID!
  body: String
  author: String
  dateOf: Time
  subject: String
}

input EditAuthor {
  id: ID!
  name: String
  subject: String
}

type Query {
  user(id: ID!): User!
  users(filter: UserFilter): [User!]!

  quote(id: ID!): Quote!
  quotes(filter: QuoteFilter): [Quote!]!

  author(id: ID!): Author!
  authors(filter: AuthorFilter): [Author!]!

}

type Mutation {
  registerUser(input: RegisterInput!): AuthPayload!
  loginUser(input: LoginInput!): AuthPayload!

  createQuote(input: QuoteCreateInput!): Quote!
  createAuthor(input: AuthorCreateInput!): Author!

  editQuoteBody(id: ID!, body: String!): Quote!
  editQuoteAuthor(id: ID!, name: String!): Quote!
  editQuoteSubject(id: ID!, subject: String!): Quote!
  editQuoteDateOf(id: ID!, dateOf: String!): Quote!

  editAuthorName(id: ID!, name: String!): Author!
  editAuthorSubject(id: ID!, subject: String!): Author!
  editAuthorDOB(id: ID!, DOB: Time!): Author!
  editAuthorDOD(id: ID!, DOD: Time!): Author!
  
  addQuoteToFavourites(id: ID!): [Quote]!
  removeQuoteFromFavourites(id: ID!): [Quote]!

  addAuthorToFavourites(id: ID!): [Author]!
  removeAuthorFromFavourites(id: ID!): [Author]!
}
